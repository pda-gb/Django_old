 Урок 1. Знакомство с фреймворком
1. Подготовить исходники для проекта – 3 страницы из верстки магазина, и разместить их в одной папке.
2. Установить Django и PyCharm. Создать проект и в нем приложение «mainapp». Проверить, что все работает.
3. Разместить шаблоны и статические файлы в соответствующих папках. Настроить проект – файл settings.py. Отредактировать файл диспетчера URL-адресов urls.py.
4. Написать функции-обработчики для всех страниц – файл views.py в приложении «mainapp». Проверить работу всех страниц проекта в черновом режиме (без стилей и изображений).
5. Откорректировать пути к статическим файлам и адреса гиперссылок в меню. Проверить, что все работает как положено (стили и изображения грузятся, гиперссылки работают).
6. Сделать файл run.bat для быстрого запуска Django-сервера.


Урок 2. Шаблон + Контекст = html
1. Реализовать наследование шаблонов в проекте. Меню подключить как подшаблон.
2. Реализовать в проекте механизмы работы со статическими файлами и URL-адресами, которые прошли на уроке.
3. Поработать с шаблонными тегами и фильтрами (заглавные буквы, вывод текущей даты в шаблоне).
4. Организовать вывод динамического контента на страницах (элементы меню, список товара, заголовок страницы).
5. *Организовать загрузку динамического контента в контроллеры с жесткого диска (например, в формате «json»).


Урок 3. Модели + ORM = данные
+1. Настроить проект для работы с медиафайлами.
+2. Создать модели в проекте (обязательно должно быть поле с изображениями)
   и выполнить миграции.
+3. Поработать с моделями в консоли.
+4. Создать суперпользователя. Настроить админку и поработать в ней.
+5. Организовать работу с моделями в контроллерах и шаблонах.
6. Реализовать автоматическое формирование меню категорий по данным из модели.
7. *Создать диспетчер URL в приложении. Скорректировать динамические
    URL-адреса в шаблонах. Поработать с имитацией переходов по категориям
    в адресной строке браузера.
8. *Организовать загрузку данных в базу из файла.
